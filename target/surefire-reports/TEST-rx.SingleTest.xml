<?xml version="1.0" encoding="UTF-8" ?>
<testsuite failures="0" time="0.395" errors="0" skipped="0" tests="95" name="rx.SingleTest">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/amd64"/>
    <property name="java.vm.version" value="24.95-b01"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/ec2-user/gitworkspace/RxJava"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/ec2-user/gitworkspace/RxJava"/>
    <property name="java.runtime.version" value="1.7.0_101-mockbuild_2016_04_26_18_10-b00"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/apache-maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="51.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.4.5-15.26.amzn1.x86_64"/>
    <property name="user.home" value="/root"/>
    <property name="user.timezone" value="UTC"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.7"/>
    <property name="user.name" value="root"/>
    <property name="java.class.path" value="/usr/share/apache-maven/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.7"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.7.0_101"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/resources.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/rt.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/jsse.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/jce.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/charsets.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/rhino.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/lib/jfr.jar:/usr/lib/jvm/java-1.7.0-openjdk-1.7.0.101.x86_64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/apache-maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase time="0" classname="rx.SingleTest" name="doOnSuccessShouldNotSwallowExceptionThrownByAction"/>
  <testcase time="0" classname="rx.SingleTest" name="shouldEmitValueFromCallable"/>
  <testcase time="0" classname="rx.SingleTest" name="deferShouldCallSingleFactoryForEachSubscriber"/>
  <testcase time="0" classname="rx.SingleTest" name="testCreateSuccess"/>
  <testcase time="0" classname="rx.SingleTest" name="testMergeWith"/>
  <testcase time="0" classname="rx.SingleTest" name="iterableToArrayShouldThrowNullPointerExceptionIfIterableNull"/>
  <testcase time="0" classname="rx.SingleTest" name="doAfterTerminateActionShouldNotBeInvokedUntilSubscriberSubscribes"/>
  <testcase time="0" classname="rx.SingleTest" name="zip3Singles"/>
  <testcase time="0" classname="rx.SingleTest" name="doOnErrorShouldCallActionIfErrorHasOccurred"/>
  <testcase time="0" classname="rx.SingleTest" name="testTimeout"/>
  <testcase time="0" classname="rx.SingleTest" name="zip8Singles"/>
  <testcase time="0" classname="rx.SingleTest" name="testHelloWorld2"/>
  <testcase time="0" classname="rx.SingleTest" name="testUnsubscribeViaReturnedSubscription"/>
  <testcase time="0" classname="rx.SingleTest" name="testMap"/>
  <testcase time="0" classname="rx.SingleTest" name="testToBlocking"/>
  <testcase time="0" classname="rx.SingleTest" name="doAfterTerminateActionShouldBeInvokedAfterOnSuccess"/>
  <testcase time="0" classname="rx.SingleTest" name="takeUntilError_withCompletable_shouldMatch"/>
  <testcase time="0" classname="rx.SingleTest" name="testHookUnsafeSubscribeStart"/>
  <testcase time="0" classname="rx.SingleTest" name="subscribeWithNullObserver"/>
  <testcase time="0" classname="rx.SingleTest" name="deferShouldPassNullPointerExceptionToTheSubscriberIfSingleFactoryIsNull"/>
  <testcase time="0" classname="rx.SingleTest" name="testAsync"/>
  <testcase time="0" classname="rx.SingleTest" name="testMerge"/>
  <testcase time="0" classname="rx.SingleTest" name="testRetry"/>
  <testcase time="0" classname="rx.SingleTest" name="onErrorResumeNextViaFunctionShouldNotInterruptSuccessfulSingle"/>
  <testcase time="0" classname="rx.SingleTest" name="testCreateError"/>
  <testcase time="0" classname="rx.SingleTest" name="testFlatMap"/>
  <testcase time="0" classname="rx.SingleTest" name="testToObservable"/>
  <testcase time="0" classname="rx.SingleTest" name="takeUntilSingleFires"/>
  <testcase time="0" classname="rx.SingleTest" name="takeUntilError_withObservable_shouldMatch"/>
  <testcase time="0" classname="rx.SingleTest" name="zip6Singles"/>
  <testcase time="0.103" classname="rx.SingleTest" name="testTimeoutWithFallback"/>
  <testcase time="0" classname="rx.SingleTest" name="doOnSuccessShouldInvokeAction"/>
  <testcase time="0" classname="rx.SingleTest" name="testZipWith"/>
  <testcase time="0" classname="rx.SingleTest" name="doAfterTerminateActionShouldBeInvokedAfterOnError"/>
  <testcase time="0.004" classname="rx.SingleTest" name="deferShouldSubscribeSubscriberToSingleFromFactoryFuncAndEmitError"/>
  <testcase time="0.001" classname="rx.SingleTest" name="deferShouldSubscribeSubscriberToSingleFromFactoryFuncAndEmitValue"/>
  <testcase time="0.001" classname="rx.SingleTest" name="takeUntilObservableCompletes"/>
  <testcase time="0.001" classname="rx.SingleTest" name="zipEmptyIterableShouldThrow"/>
  <testcase time="0.001" classname="rx.SingleTest" name="testHookSubscribeStart"/>
  <testcase time="0.001" classname="rx.SingleTest" name="zipIterableShouldZipSetOfSingles"/>
  <testcase time="0.008" classname="rx.SingleTest" name="testRetryWhen"/>
  <testcase time="0.003" classname="rx.SingleTest" name="delayWithSchedulerShouldShortCutWithFailure"/>
  <testcase time="0.001" classname="rx.SingleTest" name="takeUntilSourceErrorUnsubscribes_withSingle"/>
  <testcase time="0.001" classname="rx.SingleTest" name="testBackpressureAsObservable"/>
  <testcase time="0.001" classname="rx.SingleTest" name="subscribeWithObserverAndGetError"/>
  <testcase time="0.001" classname="rx.SingleTest" name="doOnUnsubscribeShouldInvokeActionAfterSuccess"/>
  <testcase time="0" classname="rx.SingleTest" name="takeUntilSourceErrorUnsubscribes_withObservable"/>
  <testcase time="0.001" classname="rx.SingleTest" name="testReturnUnsubscribedWhenHookThrowsError"/>
  <testcase time="0.001" classname="rx.SingleTest" name="onErrorResumeNextViaSingleShouldPreventNullSingle"/>
  <testcase time="0.001" classname="rx.SingleTest" name="onErrorResumeNextViaFunctionShouldFailIfFunctionReturnsNull"/>
  <testcase time="0.103" classname="rx.SingleTest" name="testUnsubscribe"/>
  <testcase time="0.008" classname="rx.SingleTest" name="testHookCreate"/>
  <testcase time="0.002" classname="rx.SingleTest" name="zip4Singles"/>
  <testcase time="0.004" classname="rx.SingleTest" name="testRetryWithPredicate"/>
  <testcase time="0.001" classname="rx.SingleTest" name="shouldPassErrorFromCallable"/>
  <testcase time="0.002" classname="rx.SingleTest" name="zip9Singles"/>
  <testcase time="0" classname="rx.SingleTest" name="takeUntilSourceUnsubscribes_withObservable"/>
  <testcase time="0.002" classname="rx.SingleTest" name="doOnSubscribeShouldInvokeActionBeforeSubscriberSubscribes"/>
  <testcase time="0.001" classname="rx.SingleTest" name="takeUntilError_withSingle_shouldMatch"/>
  <testcase time="0.001" classname="rx.SingleTest" name="doOnUnsubscribeShouldInvokeActionAfterExplicitUnsubscription"/>
  <testcase time="0.001" classname="rx.SingleTest" name="deferShouldPassNullPointerExceptionToTheSubscriberIfSingleFactoryReturnsNull"/>
  <testcase time="0.001" classname="rx.SingleTest" name="onErrorResumeNextViaSingleShouldResumeWithPassedSingleInCaseOfError"/>
  <testcase time="0.001" classname="rx.SingleTest" name="doOnSubscribeShouldInvokeAction"/>
  <testcase time="0.001" classname="rx.SingleTest" name="testHookSubscribeReturn"/>
  <testcase time="0.001" classname="rx.SingleTest" name="takeUntilCompletableFires"/>
  <testcase time="0" classname="rx.SingleTest" name="iterableToArrayShouldConvertSet"/>
  <testcase time="0.001" classname="rx.SingleTest" name="zip2Singles"/>
  <testcase time="0.001" classname="rx.SingleTest" name="onErrorResumeNextViaFunctionShouldResumeWithPassedSingleInCaseOfError"/>
  <testcase time="0.001" classname="rx.SingleTest" name="toCompletableError"/>
  <testcase time="0.001" classname="rx.SingleTest" name="toCompletableSuccess"/>
  <testcase time="0.002" classname="rx.SingleTest" name="zip7Singles"/>
  <testcase time="0.004" classname="rx.SingleTest" name="unsubscribeComposesThroughAsync"/>
  <testcase time="0" classname="rx.SingleTest" name="doOnErrorShouldNotCallActionIfNoErrorHasOccurred"/>
  <testcase time="0" classname="rx.SingleTest" name="doOnUnsubscribeShouldInvokeActionAfterError"/>
  <testcase time="0" classname="rx.SingleTest" name="takeUntilSourceUnsubscribes_withSingle"/>
  <testcase time="0" classname="rx.SingleTest" name="delayWithSchedulerShouldDelayCompletion"/>
  <testcase time="0.001" classname="rx.SingleTest" name="onErrorResumeNextViaFunctionShouldPreventNullFunction"/>
  <testcase time="0.001" classname="rx.SingleTest" name="deferShouldNotCallFactoryFuncUntilSubscriberSubscribes"/>
  <testcase time="0.009" classname="rx.SingleTest" name="testRetryWithCount"/>
  <testcase time="0" classname="rx.SingleTest" name="doOnErrorShouldThrowCompositeExceptionIfOnErrorActionThrows"/>
  <testcase time="0" classname="rx.SingleTest" name="subscribeWithObserver"/>
  <testcase time="0" classname="rx.SingleTest" name="takeUntilObservableFires"/>
  <testcase time="0" classname="rx.SingleTest" name="onErrorResumeNextViaSingleShouldNotInterruptSuccessfulSingle"/>
  <testcase time="0.003" classname="rx.SingleTest" name="deferShouldPassErrorFromSingleFactoryToTheSubscriber"/>
  <testcase time="0.001" classname="rx.SingleTest" name="doOnSuccessShouldNotCallActionIfSingleThrowsError"/>
  <testcase time="0.001" classname="rx.SingleTest" name="testHookUnsafeSubscribeReturn"/>
  <testcase time="0.001" classname="rx.SingleTest" name="takeUntilSourceErrorUnsubscribes_withCompletable"/>
  <testcase time="0.001" classname="rx.SingleTest" name="zip5Singles"/>
  <testcase time="0.001" classname="rx.SingleTest" name="doOnSuccessShouldPassErrorFromActionToSubscriber"/>
  <testcase time="0.001" classname="rx.SingleTest" name="zipIterableShouldZipListOfSingles"/>
  <testcase time="0.001" classname="rx.SingleTest" name="takeUntilSourceUnsubscribes_withCompletable"/>
  <testcase time="0.105" classname="rx.SingleTest" name="testUnsubscribe2"/>
  <testcase time="0" classname="rx.SingleTest" name="testHelloWorld"/>
  <testcase time="0" classname="rx.SingleTest" name="iterableToArrayShouldConvertList"/>
  <testcase time="0" classname="rx.SingleTest" name="unsubscribeComposesThrough"/>
</testsuite>